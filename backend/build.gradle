// If you would like more information on the gradle-appengine-plugin please refer to the github page
// https://github.com/GoogleCloudPlatform/gradle-appengine-plugin

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        // V2: Add the new App Engine and Endpoints Frameworks plugin dependencies
        classpath 'com.google.cloud.tools:endpoints-framework-gradle-plugin:1.0.2'
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.3.3'

        // Appengine plugin
//        classpath 'com.google.appengine:gradle-appengine-plugin:1.9.59'
    }
}

repositories {
    jcenter()
}

apply plugin: 'java'
apply plugin: 'war'

// Appengine plugin
//apply plugin: 'appengine'

// V2: Apply new App Engine and Endpoints Framework server plugins
apply plugin: 'com.google.cloud.tools.appengine'
apply plugin: 'com.google.cloud.tools.endpoints-framework-server'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

dependencies {
    // Appengine SDK
//    appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.59'

    // V2: Endpoints Framework v2 migration
//    implementation 'com.google.endpoints:endpoints-framework:2.0.9'
    implementation ('com.google.endpoints:endpoints-framework:2.0.9') {
        exclude group: 'com.google.guava'
    }
    implementation 'javax.inject:javax.inject:1'

    // Jokes library dependency
    implementation project(':jokeLib')

    implementation 'javax.servlet:servlet-api:2.5'
    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.http-client:google-http-client-android:1.23.0'
}

// Appengine plugin
//appengine {
//    downloadSdk = true
//    appcfg {
//        oauth2 = true
//    }
//    endpoints {
//        getClientLibsOnBuild = true
//        getDiscoveryDocsOnBuild = true
//        googleClientVersion = '1.23.0'
//    }
//}

// V2: Define deployment configuration using the new App Engine plugin
// with the appengine closure
//appengine {  // App Engine tasks configuration
//    deploy {   // deploy configuration
//
//        // The following is used for acceptance tests and
//        // is not required for a migration.
//        project = findProperty("appengine.deploy.project")
//        version = findProperty("appengine.deploy.version")
//        def promoteProp = findProperty("appengine.deploy.promote")
//        if (promoteProp != null) {
//            promote = new Boolean(promoteProp)
//        }
//    }
//}